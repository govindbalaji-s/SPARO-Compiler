(program (class_definition_list (class_definition (class_head class Main) { (member_list (member_list (member (method_definition (declaration_specifier (type_specifier void)) print_array ( (parameter_declaration_list (parameter_declaration_list (parameter_declaration_list (parameter_declaration (declaration_specifier (type_specifier Int)) zerocnt)) , (parameter_declaration (declaration_specifier (type_specifier Int)) onecnt)) , (parameter_declaration (declaration_specifier (type_specifier Int)) twocnt)) ) (compound_statement { (statement_list (statement_list (statement_list (statement_list (statement (iteration_statement for ( (for_initializer (declaration (declaration_specifier (type_specifier Int)) (init_declarator i = (expression (slice_expression (assignment_expression (logical_OR_expression (logical_AND_expression (equality_expression (relational_expression (additive_expression (multiplicative_expression (unary_expression (secondary_expression (primary_expression (constant 0)))))))))))))))) ; (expression (slice_expression (assignment_expression (logical_OR_expression (logical_AND_expression (equality_expression (relational_expression (relational_expression (additive_expression (multiplicative_expression (unary_expression (secondary_expression (primary_expression i)))))) < (additive_expression (multiplicative_expression (unary_expression (secondary_expression (primary_expression zerocnt)))))))))))) ; (expression (slice_expression (assignment_expression (unary_expression (secondary_expression (primary_expression i))) = (assignment_expression (logical_OR_expression (logical_AND_expression (equality_expression (relational_expression (additive_expression (additive_expression (multiplicative_expression (unary_expression (secondary_expression (primary_expression i))))) + (multiplicative_expression (unary_expression (secondary_expression (primary_expression (constant 1)))))))))))))) ) (compound_statement { (statement_list (statement (expression_statement (expression (slice_expression (assignment_expression (logical_OR_expression (logical_AND_expression (equality_expression (relational_expression (additive_expression (multiplicative_expression (unary_expression (secondary_expression (secondary_expression (secondary_expression (primary_expression ( (expression (slice_expression (assignment_expression (logical_OR_expression (logical_AND_expression (equality_expression (relational_expression (additive_expression (multiplicative_expression (unary_expression (secondary_expression (primary_expression (constant "0 "))))))))))))) ))) . put) ( ))))))))))))) ;)) })))) (statement (iteration_statement for ( (for_initializer (declaration (declaration_specifier (type_specifier Int)) (init_declarator i = (expression (slice_expression (assignment_expression (logical_OR_expression (logical_AND_expression (equality_expression (relational_expression (additive_expression (multiplicative_expression (unary_expression (secondary_expression (primary_expression (constant 0)))))))))))))))) ; (expression (slice_expression (assignment_expression (logical_OR_expression (logical_AND_expression (equality_expression (relational_expression (relational_expression (additive_expression (multiplicative_expression (unary_expression (secondary_expression (primary_expression i)))))) < (additive_expression (multiplicative_expression (unary_expression (secondary_expression (primary_expression onecnt)))))))))))) ; (expression (slice_expression (assignment_expression (unary_expression (secondary_expression (primary_expression i))) = (assignment_expression (logical_OR_expression (logical_AND_expression (equality_expression (relational_expression (additive_expression (additive_expression (multiplicative_expression (unary_expression (secondary_expression (primary_expression i))))) + (multiplicative_expression (unary_expression (secondary_expression (primary_expression (constant 1)))))))))))))) ) (compound_statement { (statement_list (statement (expression_statement (expression (slice_expression (assignment_expression (logical_OR_expression (logical_AND_expression (equality_expression (relational_expression (additive_expression (multiplicative_expression (unary_expression (secondary_expression (secondary_expression (secondary_expression (primary_expression ( (expression (slice_expression (assignment_expression (logical_OR_expression (logical_AND_expression (equality_expression (relational_expression (additive_expression (multiplicative_expression (unary_expression (secondary_expression (primary_expression (constant "1 "))))))))))))) ))) . put) ( ))))))))))))) ;)) })))) (statement (iteration_statement for ( (for_initializer (declaration (declaration_specifier (type_specifier Int)) (init_declarator i = (expression (slice_expression (assignment_expression (logical_OR_expression (logical_AND_expression (equality_expression (relational_expression (additive_expression (multiplicative_expression (unary_expression (secondary_expression (primary_expression (constant 0)))))))))))))))) ; (expression (slice_expression (assignment_expression (logical_OR_expression (logical_AND_expression (equality_expression (relational_expression (relational_expression (additive_expression (multiplicative_expression (unary_expression (secondary_expression (primary_expression i)))))) < (additive_expression (multiplicative_expression (unary_expression (secondary_expression (primary_expression twocnt)))))))))))) ; (expression (slice_expression (assignment_expression (unary_expression (secondary_expression (primary_expression i))) = (assignment_expression (logical_OR_expression (logical_AND_expression (equality_expression (relational_expression (additive_expression (additive_expression (multiplicative_expression (unary_expression (secondary_expression (primary_expression i))))) + (multiplicative_expression (unary_expression (secondary_expression (primary_expression (constant 1)))))))))))))) ) (compound_statement { (statement_list (statement (expression_statement (expression (slice_expression (assignment_expression (logical_OR_expression (logical_AND_expression (equality_expression (relational_expression (additive_expression (multiplicative_expression (unary_expression (secondary_expression (secondary_expression (secondary_expression (primary_expression ( (expression (slice_expression (assignment_expression (logical_OR_expression (logical_AND_expression (equality_expression (relational_expression (additive_expression (multiplicative_expression (unary_expression (secondary_expression (primary_expression (constant "2 "))))))))))))) ))) . put) ( ))))))))))))) ;)) })))) (statement (expression_statement (expression (slice_expression (assignment_expression (logical_OR_expression (logical_AND_expression (equality_expression (relational_expression (additive_expression (multiplicative_expression (unary_expression (secondary_expression (secondary_expression (secondary_expression (primary_expression (constant "\n"))) . put) ( ))))))))))))) ;)) })))) (member (method_definition (declaration_specifier (type_specifier Int)) main ( ) (compound_statement { (statement_list (statement_list (statement_list (statement_list (statement_list (statement_list (statement_list (statement_list (statement_list (statement (declaration (declaration_specifier (pointer_type shared) (type_specifier (array_specifier Array < (type_specifier Int) , 10 >))) (init_declarator array)) ;)) (statement (declaration (declaration_specifier (type_specifier Int)) (init_declarator cnt0 = (expression (slice_expression (assignment_expression (logical_OR_expression (logical_AND_expression (equality_expression (relational_expression (additive_expression (multiplicative_expression (unary_expression (secondary_expression (primary_expression (constant 0))))))))))))))) ;)) (statement (declaration (declaration_specifier (type_specifier Int)) (init_declarator cnt1 = (expression (slice_expression (assignment_expression (logical_OR_expression (logical_AND_expression (equality_expression (relational_expression (additive_expression (multiplicative_expression (unary_expression (secondary_expression (primary_expression (constant 0))))))))))))))) ;)) (statement (declaration (declaration_specifier (type_specifier Int)) (init_declarator cnt2 = (expression (slice_expression (assignment_expression (logical_OR_expression (logical_AND_expression (equality_expression (relational_expression (additive_expression (multiplicative_expression (unary_expression (secondary_expression (primary_expression (constant 0))))))))))))))) ;)) (statement (expression_statement (expression (slice_expression (assignment_expression (logical_OR_expression (logical_AND_expression (equality_expression (relational_expression (additive_expression (multiplicative_expression (unary_expression (secondary_expression (secondary_expression (secondary_expression (primary_expression ( (expression (slice_expression (assignment_expression (logical_OR_expression (logical_AND_expression (equality_expression (relational_expression (additive_expression (multiplicative_expression (unary_expression (secondary_expression (primary_expression (constant "Input 10 integers :\n"))))))))))))) ))) . put) ( ))))))))))))) ;)) (statement (iteration_statement for ( (for_initializer (declaration (declaration_specifier (type_specifier Int)) (init_declarator i = (expression (slice_expression (assignment_expression (logical_OR_expression (logical_AND_expression (equality_expression (relational_expression (additive_expression (multiplicative_expression (unary_expression (secondary_expression (primary_expression (constant 0)))))))))))))))) ; (expression (slice_expression (assignment_expression (logical_OR_expression (logical_AND_expression (equality_expression (relational_expression (relational_expression (additive_expression (multiplicative_expression (unary_expression (secondary_expression (primary_expression i)))))) < (additive_expression (multiplicative_expression (unary_expression (secondary_expression (primary_expression (constant 10))))))))))))) ; (expression (slice_expression (assignment_expression (unary_expression (secondary_expression (primary_expression i))) = (assignment_expression (logical_OR_expression (logical_AND_expression (equality_expression (relational_expression (additive_expression (additive_expression (multiplicative_expression (unary_expression (secondary_expression (primary_expression i))))) + (multiplicative_expression (unary_expression (secondary_expression (primary_expression (constant 1)))))))))))))) ) (compound_statement { (statement_list (statement_list (statement (expression_statement (expression (slice_expression (assignment_expression (unary_expression (secondary_expression (secondary_expression (primary_expression array)) [ (expression_list (expression (slice_expression (assignment_expression (logical_OR_expression (logical_AND_expression (equality_expression (relational_expression (additive_expression (multiplicative_expression (unary_expression (secondary_expression (primary_expression i))))))))))))) ])) = (assignment_expression (logical_OR_expression (logical_AND_expression (equality_expression (relational_expression (additive_expression (multiplicative_expression (unary_expression (new_expression (new_keyword new_unique) (type_specifier Int) ( )))))))))))))) ;)) (statement (expression_statement (expression (slice_expression (assignment_expression (logical_OR_expression (logical_AND_expression (equality_expression (relational_expression (additive_expression (multiplicative_expression (unary_expression (secondary_expression (secondary_expression (secondary_expression (secondary_expression (primary_expression array)) [ (expression_list (expression (slice_expression (assignment_expression (logical_OR_expression (logical_AND_expression (equality_expression (relational_expression (additive_expression (multiplicative_expression (unary_expression (secondary_expression (primary_expression i))))))))))))) ]) . get) ( ))))))))))))) ;)) })))) (statement (iteration_statement for ( (for_initializer (declaration (declaration_specifier (type_specifier Int)) (init_declarator i = (expression (slice_expression (assignment_expression (logical_OR_expression (logical_AND_expression (equality_expression (relational_expression (additive_expression (multiplicative_expression (unary_expression (secondary_expression (primary_expression (constant 0)))))))))))))))) ; (expression (slice_expression (assignment_expression (logical_OR_expression (logical_AND_expression (equality_expression (relational_expression (relational_expression (additive_expression (multiplicative_expression (unary_expression (secondary_expression (primary_expression i)))))) < (additive_expression (multiplicative_expression (unary_expression (secondary_expression (primary_expression (constant 10))))))))))))) ; (expression (slice_expression (assignment_expression (unary_expression (secondary_expression (primary_expression i))) = (assignment_expression (logical_OR_expression (logical_AND_expression (equality_expression (relational_expression (additive_expression (additive_expression (multiplicative_expression (unary_expression (secondary_expression (primary_expression i))))) + (multiplicative_expression (unary_expression (secondary_expression (primary_expression (constant 1)))))))))))))) ) (compound_statement { (statement_list (statement (selection_statement if ( (expression (slice_expression (assignment_expression (logical_OR_expression (logical_AND_expression (equality_expression (equality_expression (relational_expression (additive_expression (multiplicative_expression (unary_expression (secondary_expression (secondary_expression (primary_expression array)) [ (expression_list (expression (slice_expression (assignment_expression (logical_OR_expression (logical_AND_expression (equality_expression (relational_expression (additive_expression (multiplicative_expression (unary_expression (secondary_expression (primary_expression i))))))))))))) ])))))) == (relational_expression (additive_expression (multiplicative_expression (unary_expression (secondary_expression (primary_expression (constant 0))))))))))))) ) (compound_statement { (statement_list (statement (expression_statement (expression (slice_expression (assignment_expression (unary_expression (secondary_expression (primary_expression cnt0))) = (assignment_expression (logical_OR_expression (logical_AND_expression (equality_expression (relational_expression (additive_expression (additive_expression (multiplicative_expression (unary_expression (secondary_expression (primary_expression cnt0))))) + (multiplicative_expression (unary_expression (secondary_expression (primary_expression (constant 1))))))))))))))) ;)) }) else (compound_statement { (statement_list (statement (selection_statement if ( (expression (slice_expression (assignment_expression (logical_OR_expression (logical_AND_expression (equality_expression (equality_expression (relational_expression (additive_expression (multiplicative_expression (unary_expression (secondary_expression (secondary_expression (primary_expression array)) [ (expression_list (expression (slice_expression (assignment_expression (logical_OR_expression (logical_AND_expression (equality_expression (relational_expression (additive_expression (multiplicative_expression (unary_expression (secondary_expression (primary_expression i))))))))))))) ])))))) == (relational_expression (additive_expression (multiplicative_expression (unary_expression (secondary_expression (primary_expression (constant 1))))))))))))) ) (compound_statement { (statement_list (statement (expression_statement (expression (slice_expression (assignment_expression (unary_expression (secondary_expression (primary_expression cnt1))) = (assignment_expression (logical_OR_expression (logical_AND_expression (equality_expression (relational_expression (additive_expression (additive_expression (multiplicative_expression (unary_expression (secondary_expression (primary_expression cnt1))))) + (multiplicative_expression (unary_expression (secondary_expression (primary_expression (constant 1))))))))))))))) ;)) }) else (compound_statement { (statement_list (statement (expression_statement (expression (slice_expression (assignment_expression (unary_expression (secondary_expression (primary_expression cnt2))) = (assignment_expression (logical_OR_expression (logical_AND_expression (equality_expression (relational_expression (additive_expression (additive_expression (multiplicative_expression (unary_expression (secondary_expression (primary_expression cnt2))))) + (multiplicative_expression (unary_expression (secondary_expression (primary_expression (constant 1))))))))))))))) ;)) })))) })))) })))) (statement (expression_statement (expression (slice_expression (assignment_expression (logical_OR_expression (logical_AND_expression (equality_expression (relational_expression (additive_expression (multiplicative_expression (unary_expression (secondary_expression (secondary_expression (primary_expression print_array)) ( (expression_list (expression_list (expression_list (expression (slice_expression (assignment_expression (logical_OR_expression (logical_AND_expression (equality_expression (relational_expression (additive_expression (multiplicative_expression (unary_expression (secondary_expression (primary_expression cnt0))))))))))))) , (expression (slice_expression (assignment_expression (logical_OR_expression (logical_AND_expression (equality_expression (relational_expression (additive_expression (multiplicative_expression (unary_expression (secondary_expression (primary_expression cnt1))))))))))))) , (expression (slice_expression (assignment_expression (logical_OR_expression (logical_AND_expression (equality_expression (relational_expression (additive_expression (multiplicative_expression (unary_expression (secondary_expression (primary_expression cnt2))))))))))))) ))))))))))))) ;)) (statement (jump_statement return (expression (slice_expression (assignment_expression (logical_OR_expression (logical_AND_expression (equality_expression (relational_expression (additive_expression (multiplicative_expression (unary_expression (secondary_expression (primary_expression (constant 0)))))))))))))) ;)) })))) } ;)))
