(program (class_definition_list (class_definition (class_head class Main) { (member_list (member (method_definition (declaration_specifier (type_specifier Int)) main ( ) (compound_statement { (statement_list (statement_list (statement_list (statement_list (statement_list (statement_list (statement_list (statement_list (statement (declaration (declaration_specifier (type_specifier Int)) (init_declarator x = (expression (slice_expression (assignment_expression (logical_OR_expression (logical_AND_expression (equality_expression (relational_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0))))))))))))))) ;)) (statement (declaration (declaration_specifier (type_specifier Int)) (init_declarator y = (expression (slice_expression (assignment_expression (logical_OR_expression (logical_AND_expression (equality_expression (relational_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 9))))))))))))))) ;)) (statement (declaration (declaration_specifier (type_specifier Int)) (init_declarator z = (expression (slice_expression (assignment_expression (logical_OR_expression (logical_AND_expression (equality_expression (relational_expression (additive_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression x))))) + (multiplicative_expression (unary_expression (postfix_expression (primary_expression y)))))))))))))) ;)) (statement (expression_statement (expression (slice_expression (assignment_expression (logical_OR_expression (logical_AND_expression (equality_expression (relational_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (postfix_expression (postfix_expression (primary_expression (constant "Is this the correct way writing to stdout??"))) . put) ( ))))))))))))) ;)) (statement (expression_statement (expression (slice_expression (assignment_expression (logical_OR_expression (logical_AND_expression (equality_expression (relational_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (postfix_expression (postfix_expression (primary_expression ( (expression (slice_expression (assignment_expression (logical_OR_expression (logical_AND_expression (equality_expression (relational_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant "The sum is = "))))))))))))) ))) . put) ( ))))))))))))) ;)) (statement (expression_statement (expression (slice_expression (assignment_expression (logical_OR_expression (logical_AND_expression (equality_expression (relational_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (postfix_expression (postfix_expression (primary_expression ( (expression (slice_expression (assignment_expression (logical_OR_expression (logical_AND_expression (equality_expression (relational_expression (additive_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression x))))) + (multiplicative_expression (unary_expression (postfix_expression (primary_expression y)))))))))))) ))) . put) ( ))))))))))))) ;)) (statement (expression_statement (expression (slice_expression (assignment_expression (logical_OR_expression (logical_AND_expression (equality_expression (relational_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (postfix_expression (postfix_expression (primary_expression (constant "\n"))) . put) ( ))))))))))))) ;)) (statement (jump_statement return (expression (slice_expression (assignment_expression (logical_OR_expression (logical_AND_expression (equality_expression (relational_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0)))))))))))))) ;)) })))) } ;)))
